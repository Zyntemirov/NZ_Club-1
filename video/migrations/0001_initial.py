# Generated by Django 3.0.3 on 2021-08-03 06:44

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.CharField(max_length=255, null=True, verbose_name='Ютуб ссылка')),
                ('url', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='banners/', verbose_name='Обложка')),
                ('block', models.PositiveIntegerField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('views', models.ManyToManyField(related_name='views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Баннер',
                'verbose_name_plural': 'Баннеры',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=0, size=[100, 100], upload_to='category/', verbose_name='Фотография')),
                ('order', models.PositiveIntegerField(blank=True, default=0)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Вопрос')),
                ('reply', models.TextField(verbose_name='Ответ')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('text', models.TextField(verbose_name='Описание')),
                ('phone_1', models.CharField(blank=True, max_length=16, null=True, verbose_name='Телефон номер 1')),
                ('phone_2', models.CharField(blank=True, max_length=16, null=True, verbose_name='Телефон номер 2')),
                ('phone_3', models.CharField(blank=True, max_length=16, null=True, verbose_name='Телефон номер 3')),
                ('instagram', models.CharField(blank=True, max_length=50, null=True, verbose_name='Инстаграм')),
                ('facebook', models.CharField(blank=True, max_length=50, null=True, verbose_name='Файсбук')),
                ('web_site', models.CharField(blank=True, max_length=50, null=True, verbose_name='Вебсайт')),
                ('video', models.CharField(help_text='Просмотр видео', max_length=255, null=True, verbose_name='Ютуб ссылка')),
                ('type', models.CharField(choices=[('1', 'Обычный'), ('2', 'Премиум'), ('3', 'Благотворительность')], max_length=20, verbose_name='Тип')),
                ('status', models.CharField(blank=True, choices=[('1', 'Отклонено'), ('2', 'Активно'), ('3', 'В ожидании')], max_length=20, null=True, verbose_name='Статус')),
                ('create_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_top', models.BooleanField(default=True, verbose_name='Топ')),
                ('image', models.ImageField(upload_to='videos/', verbose_name='Обложка')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='video.Category', verbose_name='Категория')),
                ('favorites', models.ManyToManyField(related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('views', models.ManyToManyField(related_name='videos', to=settings.AUTH_USER_MODEL, verbose_name='Просмотров')),
                ('watched_videos', models.ManyToManyField(related_name='watched_videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
            },
        ),
        migrations.CreateModel(
            name='VideoTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('video', models.CharField(max_length=255, null=True, verbose_name='Ютуб ссылка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('image', models.ImageField(upload_to='videos_training/', verbose_name='Фотография')),
            ],
            options={
                'verbose_name': 'Видео обучения',
                'verbose_name_plural': 'Видео обучения',
            },
        ),
        migrations.CreateModel(
            name='ViewHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus', models.IntegerField(default=0, verbose_name='Бонус')),
                ('create_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='video.Video', verbose_name='Ютуб ссылка')),
            ],
            options={
                'verbose_name': 'Просмотр история (Реклама))',
                'verbose_name_plural': 'Просмотр истории (Реклама)',
            },
        ),
        migrations.CreateModel(
            name='ViewBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата создания')),
                ('banner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banners', to='video.Banner', verbose_name='Баннер видео')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banners', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Просмотр история (Баннер)',
                'verbose_name_plural': 'Просмотр истории (Баннер)',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.IntegerField(verbose_name='Просмотр')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariffs', to='video.Video', verbose_name='Ютуб ссылка')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес')),
                ('phone', models.CharField(max_length=15, verbose_name='Телефон номер')),
                ('sum', models.IntegerField(default=0, verbose_name='Цена')),
                ('promo_code', models.CharField(blank=True, max_length=40, verbose_name='Промо код')),
                ('create_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата создания')),
                ('is_checked', models.BooleanField(default=False, verbose_name='Провереннный')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='video.Category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
        migrations.CreateModel(
            name='ComplaintBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('1', '1'), ('2', '2')], max_length=2, verbose_name='Типы жалоба')),
                ('text', models.TextField(blank=True, null=True)),
                ('banner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaint_banners', to='video.Banner', verbose_name='Баннер видео')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaint_banners', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Жалоб (Баннер)',
                'verbose_name_plural': 'Жалоб (Баннер)',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
                ('create_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='video.Comment', verbose_name='Родитель')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='video.Video', verbose_name='Ютуб ссылка')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ('-create_at',),
            },
        ),
        migrations.CreateModel(
            name='MyVideo',
            fields=[
            ],
            options={
                'verbose_name': 'Видео для неактивных',
                'verbose_name_plural': 'Видео для неактивных',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('video.video',),
        ),
        migrations.CreateModel(
            name='LikeBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата создания')),
                ('banner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_banners', to='video.Banner', verbose_name='Баннер видео')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_banners', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лайк (Баннер)',
                'verbose_name_plural': 'Лайк (Баннер)',
                'unique_together': {('user', 'banner')},
            },
        ),
    ]
